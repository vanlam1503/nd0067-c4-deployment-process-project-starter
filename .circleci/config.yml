version: 2.1
orbs:
  # orgs contain basc recipes and reproducible actions (install node, aws, etc.)
  node: circleci/node@5.0.2
  eb: circleci/aws-elastic-beanstalk@2.0.1
  aws-cli: circleci/aws-cli@3.1.1
  # different jobs are calles later in the workflows sections
jobs:
  build:
    docker:
      # the base image can run most needed actions with orbs
      - image: "cimg/base:stable"
    resource_class: large
    steps:
      # install node and checkout code
      - node/install:
          node-version: '18.20.5'
      - checkout
      - aws-cli/setup
      # Use root level package.json to install dependencies in the frontend app
      - run:
          name: Install Front-End Dependencies
          command: |
            echo "NODE --version" 
            echo $(node --version)
            echo "NPM --version"
            echo $(npm --version)
            npm run frontend:install
      - run:
          name: Install API Dependencies
          command: |
            echo "TODO: Install dependencies in the the backend API  "
            npm run api:install 
      - run:
          name: Front-End Lint
          command: |
            echo "TODO: Lint the frontend"
            npm run frontend:lint
      - run:
          name: Front-End Build
          command: |
            echo "TODO: Build the frontend app"
            npm run frontend:build

      - run:
          name: API Build
          command: |
            echo "TODO: Build the backend API"
            npm run api:build
  # deploy step will run only after manual approval
  deploy:
    docker:
      - image: "cimg/base:stable"
      # more setup needed for aws, node, elastic beanstalk
    steps:
      - node/install:
          node-version: '18.20.5' 
      - eb/setup
      - aws-cli/setup
      - checkout
      - run:
          name: Setup EB applications
          command: |
            printf "n\n" | eb init udagram-api --region us-east-1
      - run:
          name: Setup the secrets and them to EB
          command: |
            eb setenv \
              POSTGRES_USERNAME=postgres \
              POSTGRES_PASSWORD=postgres \
              POSTGRES_HOST=database1.cofjg5owxo35.us-east-1.rds.amazonaws.com \
              POSTGRES_DB=postgres \
              AWS_BUCKET=arn:aws:s3:::mybucket974410881372 \
              AWS_PROFILE=default \
              JWT_SECRET=mysecretstring \
              URL=http://localhost:8100 \
              --environment udagram-api-env01
      - run:
          name: Deploy App
          command: |
            echo "# TODO: Install, build, deploy in both apps"
            npm run deploy
            
workflows:
  udagram:
    jobs:
      - build
      - hold:
          filters:
            branches:
              only:
                - master
          type: approval
          requires:
            - build
      - deploy:
          requires:
            - hold
